version: '3.8'

services:

#  kafka:
#    image: apache/kafka:3.9.0
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      - KAFKA_NODE_ID=1
#      - KAFKA_PROCESS_ROLES=broker,controller
#      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
#      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
#      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
#      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
#      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
#      - KAFKA_NUM_PARTITIONS=3
#    networks:
#      - hadoopapp

#  redis:
#    image: redis:latest
#    container_name: redis
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis_data:/data
#    networks:
#      - hadoopapp

#  kafdrop:
#    image: obsidiandynamics/kafdrop:latest
#    container_name: kafdrop
#    environment:
#      KAFKA_BROKERCONNECT: localhost:9092
#    ports:
#      - "9000:9000"
#    depends_on:
#      - kafka
#    networks:
#      - hadoopapp

volumes:
  redis_data:

networks:
  hadoopapp: